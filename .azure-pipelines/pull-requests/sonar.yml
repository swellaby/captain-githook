trigger:
- master

pr:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
- group: captain-githook
- name: environment
  value: Sonar

steps:
- task: GoTool@0
  displayName: 'Use Go 1.12'
  inputs:
    version: 1.12

- script: |
    export GOPATH=$(go env GOPATH)
    PATH=$PATH:$GOPATH/bin
    curl -sL https://taskfile.dev/install.sh | sh -s -- -b $GOPATH/bin
    task setup
    export PROJECT_VERSION=$(task print-version)
    echo "##vso[task.setvariable variable=projectVersion]$PROJECT_VERSION"
  displayName: 'Install dependencies'

- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'SonarCloud Swellaby'
    organization: swellaby
    scannerMode: CLI
    extraProperties: |
     sonar.projectVersion=$(projectVersion)
     sonar.userHome=/home/vsts/.cache/.sonar

- bash: |
   export GOPATH=$(go env GOPATH)
   PATH=$PATH:$GOPATH/bin
   task ci
  displayName: 'Run CI script'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'

- task: PublishTestResults@2
  displayName: 'Publish unit test results'
  inputs:
    testResultsFiles: '$(junitXmlResultsFileName)'
    searchFolder: '$(testResultsDirPath)'
    testRunTitle: '$(prTestResultsTitle)'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(fullCoberturaResultsFilePath)'
    reportDirectory: '$(covResultsDirPath)'
  condition: succeededOrFailed()
